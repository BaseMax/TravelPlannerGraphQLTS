# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  token: String!
  name: String!
}

type User {
  email: String!
  name: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Note {
  _id: String!
  collaboratorId: String!
  content: String!
  createdAt: DateTime!
}

type Trip {
  _id: String!
  destination: String!
  fromDate: DateTime!
  toDate: DateTime!
  collaborators: [String!]!
  notes: [Note!]!
}

type PopularDestination {
  tripsCount: Int!
  destination: String!
}

type Query {
  user(id: Int!): User!
  trip(id: String!): Trip!
  userTrips: [Trip!]!
  collaboratorsInTrip(id: String!): [String!]!
  searchTrip(searchInput: SearchTripInput!): [Trip!]!
  getTripsByDateRange(dateRange: SearchTripInput!): [Trip!]!
  PopularDestination: [PopularDestination!]!
  note(id: Int!): Note!
}

input SearchTripInput {
  destination: String
  fromDate: DateTime
  toDate: DateTime
}

type Mutation {
  signup(SignupInput: SignupInput!): Auth!
  login(loginInput: LoginInput!): Auth!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createTrip(createTripInput: CreateTripInput!): Trip!
  addCollaborator(tripId: String!, userId: String!): Trip!
  removeCollaborator(userId: String!, tripId: String!): Trip!
  updateTrip(updateTripInput: UpdateTripInput!): Trip!
  removeTrip(id: String!): Trip!
  createNote(createNoteInput: CreateNoteInput!): Trip!
  updateNote(updateNoteInput: UpdateNoteInput!): Trip!
  removeNote(tripId: String!, noteId: String!): Trip!
}

input SignupInput {
  name: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input LoginInput {
  email: String
  password: String
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
  confirmPassword: String
  id: Int!
}

input CreateTripInput {
  destination: String!
  fromDate: DateTime!
  toDate: DateTime!
  collaborators: [String!]
}

input UpdateTripInput {
  destination: String
  fromDate: DateTime
  toDate: DateTime
  collaborators: [String!]
  id: Int!
}

input CreateNoteInput {
  content: String!
  tripId: String!
}

input UpdateNoteInput {
  content: String
  tripId: String!
  noteId: String!
}

type Subscription {
  collaboratorAdded(tripId: String!): Trip!
  collaboratorRemoved(tripId: String!): Trip!
  tripRemoved(tripId: String!): Trip!
  noteAdded(tripId: String!): Trip!
  noteUpdated(tripId: String!): Trip!
  noteRemoved(tripId: String!): Trip!
}